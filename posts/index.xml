<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Dr Random</title><link>http://drrandom.org/posts/</link><description>Recent content in Posts on Dr Random</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Jun 2015 21:09:13 +0000</lastBuildDate><atom:link href="http://drrandom.org/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>A bit on making functions tail-recursive in F#</title><link>http://drrandom.org/2015/06/14/a-bit-on-making-functions-tail-recursive-in-f/</link><pubDate>Sun, 14 Jun 2015 21:09:13 +0000</pubDate><guid>http://drrandom.org/2015/06/14/a-bit-on-making-functions-tail-recursive-in-f/</guid><description>If you recall a while back when I was demonstrating some Functional Data Structures , I mentioned the fact that some of the functions were not tail recursive, and that this is something that we would probably want to do something about. Which raises the question: How exactly do we go about making a function tail-recursive? I am going to attempt to address that question here.
One of the first problems with creating a tail recursive function is figuring out whether a function is tail recursive in the first place.</description></item><item><title>fold – The greatest thing that ever happened to your data structure</title><link>http://drrandom.org/2015/06/08/purely-functional-data-structures-part-2/</link><pubDate>Mon, 08 Jun 2015 17:16:22 +0000</pubDate><guid>http://drrandom.org/2015/06/08/purely-functional-data-structures-part-2/</guid><description>Let&amp;rsquo;s say that you’ve been working hard on this really awesome data structure. Its fast, its space efficient, its immutable, its everything anyone could dream of in a data structure. But you only have time to implement one function for processing the data in your new miracle structure, so what would it be?
Ok, not a terribly realistic scenario, but bare with me here, there is a point to this. The answer to this question, of course, is that you would implement fold.</description></item><item><title>Purely Functional Data Structures–Part 2</title><link>http://drrandom.org/2012/07/24/purely-functional-data-structures-part-2/</link><pubDate>Tue, 24 Jul 2012 18:15:17 +0000</pubDate><guid>http://drrandom.org/2012/07/24/purely-functional-data-structures-part-2/</guid><description>So here we are at part 2 in the series of posts looking at Functional Data Structures from the book of the same name by Chris Okasaki. Last time we looked at what is perhaps the simplest of the functional data structures, the List (also useful as a LIFO stack). Up next we’ll continue in the order that Chris Okasaki used in his book, and take a look at implementing a Set using a Binary Tree.</description></item><item><title>Purely Functional Data Structures–Part 1</title><link>http://drrandom.org/2012/07/23/purely-functional-data-structures-part-1/</link><pubDate>Mon, 23 Jul 2012 06:00:00 +0000</pubDate><guid>http://drrandom.org/2012/07/23/purely-functional-data-structures-part-1/</guid><description>I thought it might be fun to explore a little bit of CS as it applies to functional programming, by looking at the idea of Functional Data Structures. This is actually an area that is still getting a lot of active research, and is pretty interesting stuff overall. The general idea is to try and figure out ways to provide immutable data structures which can be efficiently implemented in a functional setting.</description></item><item><title>A quick (?) retrospective on learning (and using) F#</title><link>http://drrandom.org/2012/07/22/a-quick-retrospective-on-learning-and-using-f/</link><pubDate>Sun, 22 Jul 2012 15:00:00 +0000</pubDate><guid>http://drrandom.org/2012/07/22/a-quick-retrospective-on-learning-and-using-f/</guid><description>As you may have guessed from the title, I’ve started doing some work with F#. Initially I was somewhat reluctant to go down the F# path because some of the more interesting aspects of the other functional languages I’ve been exploring are not present…specifically the type systems behind Scala and Haskell, the laziness of Haskell, and the concurrent programming model of Erlang. In spite of these perceived downfalls, there were some definite plusses, namely interoperability with everything .</description></item><item><title>Moved Comments to Disqus</title><link>http://drrandom.org/2012/04/20/moved-comments-to-disqus/</link><pubDate>Fri, 20 Apr 2012 14:40:00 +0000</pubDate><guid>http://drrandom.org/2012/04/20/moved-comments-to-disqus/</guid><description>As of yesterday the comments on the blog here are now officially hosted by Disqus. If anyone has tried leaving comments in the past only to have them never show up (or disappear at some point), I apologize for that. The spam was a little crazy&amp;hellip;.and by a little crazy I mean effing insane, It got to the point where I was unable to separate the wheat from the chaff, and went through a couple different strategies to try and get things under control&amp;hellip;Disqus is the latest (and hopefully last) of these strategies.</description></item><item><title>Sometimes doing the right thing is still not the right thing</title><link>http://drrandom.org/2012/03/20/sometimes-doing-the-right-thing-is-still-not-the-right-thing/</link><pubDate>Tue, 20 Mar 2012 10:14:00 +0000</pubDate><guid>http://drrandom.org/2012/03/20/sometimes-doing-the-right-thing-is-still-not-the-right-thing/</guid><description>Tentatively subtitled: “How scale can make fools of us all”
This is going to be a real life war story…cause I haven’t done one of those in a while, and this particular case really ticked me off. Here’s the scoop: I’ve got a “service” which is called by other parts of the system. And by “service” I don’t mean something running in its own process and waiting for SOAP/REST requests or messages, I simply mean something that has a defined entry point (a static method in this case), where you pass in some data, and get something back.</description></item><item><title>I think Scala may be a gateway drug</title><link>http://drrandom.org/2012/01/24/i-think-scala-may-be-a-gateway-drug/</link><pubDate>Tue, 24 Jan 2012 06:52:00 +0000</pubDate><guid>http://drrandom.org/2012/01/24/i-think-scala-may-be-a-gateway-drug/</guid><description>As I have been trying to learn more about Scala, there have been several paths that I’ve had to follow. One is getting acquainted with the state of Java development, since ultimately Scala exists within the Java ecosystem. Another is finding my way around the Scala libraries, tools, and idioms. But there is a third that seems to be somewhat deeper, and that is coming to grips with the functional nature of the language.</description></item><item><title>Making the Climb Part 4–Pattern Matching</title><link>http://drrandom.org/2012/01/22/making-the-climb-part-4-pattern-matching/</link><pubDate>Sun, 22 Jan 2012 20:23:58 +0000</pubDate><guid>http://drrandom.org/2012/01/22/making-the-climb-part-4-pattern-matching/</guid><description>Continuing our journey down the path from the familiar to the down-right bizarre, we find ourselves at Pattern Matching. This is a feature of the Scala language that shows it’s functional side in a strong way. Pattern Matching is a fundamental part of functional languages in general, and provides a way to write very concise and expressive code. On the surface, pattern matching in Scala looks an awful lot like switch statements in C# (and Java for that matter), but you shouldn’t cling too hard to that association.</description></item><item><title>Grappling with multiple remotes in git-tfs</title><link>http://drrandom.org/2011/11/16/grappling-with-multiple-remotes-in-git-tfs/</link><pubDate>Wed, 16 Nov 2011 06:53:00 +0000</pubDate><guid>http://drrandom.org/2011/11/16/grappling-with-multiple-remotes-in-git-tfs/</guid><description>If you happen to be one of the many people in the unfortunate situation to be stuck working with TFS source control on a daily basis and gaze longingly at the folks using Git or Mercurial wishing you could have some of that distributed goodness for your very own self, I am here to tell you that all is not lost. There are a couple ways you can work with a distributed version control system along side TFS and try and reduce the pain associated with TFS.</description></item><item><title>Making the Climb Part 3 – Generics of a Higher Kind</title><link>http://drrandom.org/2011/10/05/making-the-climb-part-3-generics-of-a-higher-kind/</link><pubDate>Wed, 05 Oct 2011 16:24:00 +0000</pubDate><guid>http://drrandom.org/2011/10/05/making-the-climb-part-3-generics-of-a-higher-kind/</guid><description>This is part 3 in a series. If you&amp;rsquo;ve not followed-along so far, you may want to check out Part 1 and Part 2 first.
It&amp;rsquo;s time to start digging in to some of the crazy-goodness that makes Scala such a glorious and wonderful thing. First things first, though, we have to talk a little bit about this history of Generics in Java and the JVM.
Type Erasure and you&amp;hellip; Back around the time that .</description></item><item><title>Making the Climb Part 2–Object-Oriented Programming in Scala</title><link>http://drrandom.org/2011/08/14/making-the-climb-part-2-object-oriented-programming-in-scala/</link><pubDate>Sun, 14 Aug 2011 23:39:00 +0000</pubDate><guid>http://drrandom.org/2011/08/14/making-the-climb-part-2-object-oriented-programming-in-scala/</guid><description>In Part 2 of this series we&amp;rsquo;re going to move into some of the object-oriented aspects of Scala. For a primer on what Scala is, and a quick primer on syntax, check out part 1 .
Let&amp;rsquo;s start with the built-in object structure Like C# and Java, Scala has a built-in object hierarchy, and a standard library full of goodies. Unlike Java and C#, Scala tackled the issue of reference types and value types head-on, so while the root type in the Scala type system is the Any type, there are two descendants of Any that come into play before any other type.</description></item><item><title>Making The Climb: Head-To-Head with Project Euler (questions #1 &amp; #2)</title><link>http://drrandom.org/2011/08/04/making-the-climb-head-to-head-with-project-euler-questions-1-2/</link><pubDate>Thu, 04 Aug 2011 01:50:00 +0000</pubDate><guid>http://drrandom.org/2011/08/04/making-the-climb-head-to-head-with-project-euler-questions-1-2/</guid><description>I’m going to take a brief intermission in my Scala series , and show a head-to-head comparison of some code in Scala and C#. To do this, I’m going to go with the first and second problems from Project Euler . If your not familiar with the site, it’s a playground full of problems that are absolutely perfect for functional languages (cause they tend to be mathematical functions). So let’s get started with Question #1:</description></item><item><title>Making the Climb: Chronicling the journey from C# to Scala</title><link>http://drrandom.org/2011/07/31/making-the-climb-chronicling-the-journey-from-c-to-scala/</link><pubDate>Sun, 31 Jul 2011 19:41:00 +0000</pubDate><guid>http://drrandom.org/2011/07/31/making-the-climb-chronicling-the-journey-from-c-to-scala/</guid><description>Hows that for a title, eh? Yeah, I know, kinda crappy, but there is only so much creativity I can manage in a day, and as you will soon find out my mind is busy with all kinds of new and interesting thing, so any spare neural pathways which may have one been useful for something like clever titles are now just too damn busy to be bothered.
So what is this all about?</description></item><item><title>Announcing the Duhking Library for .Net 3.5</title><link>http://drrandom.org/2010/06/17/announcing-the-duhking-library-for-net-3-5/</link><pubDate>Thu, 17 Jun 2010 21:46:05 +0000</pubDate><guid>http://drrandom.org/2010/06/17/announcing-the-duhking-library-for-net-3-5/</guid><description>If it walks like a giraffe and talks like a duck then what is it? Maybe a duhk? Who knows, but it certainly is not a duck. So if that is the case, then you can probably guess what the Duhking library is all about…or maybe you can’t. In terms of programming, Duck Typing refers to the ability of some languages to allow you to treat an object of one type as an object of a different type, provided the methods/properties needed exist on both objects.</description></item><item><title>More CodeRush Awesomeness</title><link>http://drrandom.org/2009/12/15/more-coderush-awesomeness/</link><pubDate>Tue, 15 Dec 2009 15:08:00 +0000</pubDate><guid>http://drrandom.org/2009/12/15/more-coderush-awesomeness/</guid><description>On November 27th, a beta release of the 9.3 version of the Developer Express components, including CodeRush and Refactor Pro! was made available to subscribers. This release is pretty significant to me because it contains a major feature that I have been waiting for for a long time: A Unit Test Runner. There were some teasers released by Mark Miller a while back, which only made me want to get my hands on the tool that much more.</description></item><item><title>Announcing CR_MoveFile: DxCore plug-in for moving files around in a solution</title><link>http://drrandom.org/2009/12/07/announcing-cr_movefile-dxcore-plug-in-for-moving-files-around-in-a-solution/</link><pubDate>Mon, 07 Dec 2009 19:17:00 +0000</pubDate><guid>http://drrandom.org/2009/12/07/announcing-cr_movefile-dxcore-plug-in-for-moving-files-around-in-a-solution/</guid><description>As of right about now, you should be able to mosey on over to the DxCore Community Plug-ins page, and grab a copy of CR_MoveFile. This is a plug-in I created primarily as a tool to aid in working in a TDD environment, but which certainly has uses for non-TDD applications. It does basically what the name suggests, it allows you to move a file from one directory in your solution/project structure to another, even one in a different project.</description></item><item><title>Getting a CodeRush: Inside a CodeRush CodeIssue</title><link>http://drrandom.org/2009/10/07/getting-a-coderush-inside-a-coderush-codeissue/</link><pubDate>Wed, 07 Oct 2009 17:22:00 +0000</pubDate><guid>http://drrandom.org/2009/10/07/getting-a-coderush-inside-a-coderush-codeissue/</guid><description>Anyone who has been around me for more than a few hours while coding, or who pays any attention to me on Twitter will know that I am a huge fan of CodeRush and Refactor Pro! from DevExpress . I consider these sorts of tools essential to getting the most out of your development environment, and I think CodeRush is one of the best tools available for a number of reasons, not the least of which is it&amp;rsquo;s extensibility.</description></item><item><title>Some code for sorting lists which may contain dependencies</title><link>http://drrandom.org/2009/09/18/some-code-for-sorting-lists-which-may-contain-dependencies/</link><pubDate>Fri, 18 Sep 2009 20:08:47 +0000</pubDate><guid>http://drrandom.org/2009/09/18/some-code-for-sorting-lists-which-may-contain-dependencies/</guid><description>I ran into this odd problem recently working with some Linq2SQL based persistence code. There is some code someone put together to commit a list of changed entities to the database as part of a single transaction, which simply iterates through the list and performs the appropriate action. The problem I was having was that I had an object referenced by another object that needed to be persisted first, otherwise there was a foreign key violation.</description></item><item><title>Lot’s of Changes</title><link>http://drrandom.org/2009/09/09/lots-of-changes/</link><pubDate>Wed, 09 Sep 2009 20:47:07 +0000</pubDate><guid>http://drrandom.org/2009/09/09/lots-of-changes/</guid><description>As of today I have updated several things on the site. First, I have a new hosting provider, WinHost . This was primarily a financial decision (saving $3.03 a month, not a lot but hey, every little bit helps, right?), but it looks like there are some nice technical advantages to switching as well. Some of these are things like IIS 7 hosting, and SQL Server access. Also you get unlimited domain name pointers, so the IThinkIn.</description></item><item><title>Review: Art of Unit Testing by Roy Osherove</title><link>http://drrandom.org/2009/09/02/review-art-of-unit-testing-by-roy-osherove/</link><pubDate>Wed, 02 Sep 2009 17:36:02 +0000</pubDate><guid>http://drrandom.org/2009/09/02/review-art-of-unit-testing-by-roy-osherove/</guid><description>I was pleased to find recently that Roy Osherove’s Art of Unit Testing was available on Safari. I have been following Roy’s blog for a while now, and was quite excited at the prospect of him writing a book on Unit Testing. It was only my personal cheapness that kept me from shelling out the $25 to get the E-Book version from Manning ahead of time. I have to say, now that I have read it, that it would have been well worth the money.</description></item><item><title>Review – TypeMock Racer and Unit Testing Multithreaded Applications</title><link>http://drrandom.org/2009/06/19/review-typemock-racer-and-unit-testing-multithreaded-applications/</link><pubDate>Fri, 19 Jun 2009 16:31:00 +0000</pubDate><guid>http://drrandom.org/2009/06/19/review-typemock-racer-and-unit-testing-multithreaded-applications/</guid><description>The folks at TypeMock have released a new UnitTesting tool aimed specifically at catching deadlocks in multithreaded code called TypeMock Racer , and what&amp;rsquo;s more they are offering free licenses to folks willing to review it during the 21 day free trial period. As anyone who knows me can testify to, I am a whore for free-bees, so I decided to take them up on this.
For the impatient, here is the executive summary:</description></item><item><title>Typemock License Giveaway</title><link>http://drrandom.org/2009/05/20/typemock-license-giveaway/</link><pubDate>Wed, 20 May 2009 16:46:43 +0000</pubDate><guid>http://drrandom.org/2009/05/20/typemock-license-giveaway/</guid><description>[Unit Testing ](1) ASP.NET? [ASP.NET unit testing ](2) has never been this easy. Typemock is launching a new product for ASP.NET developers – the ASP.NET Bundle – and for the launch will be giving out FREE licenses to bloggers and their readers.
The ASP.NET Bundle is the ultimate ASP.NET unit testing solution, and offers both Typemock Isolator , a unit test tool and Ivonna , the Isolator add-on for ASP.</description></item><item><title>Some (good?) string extension methods</title><link>http://drrandom.org/2009/02/22/some-good-string-extension-methods/</link><pubDate>Sun, 22 Feb 2009 17:19:09 +0000</pubDate><guid>http://drrandom.org/2009/02/22/some-good-string-extension-methods/</guid><description>So, to take a slightly different turn from my usual meta discussions of process, theory, and architecture, there have been several people who have offered up some examples of extension methods that they have found useful, now that .Net 3.5 is roaring along nicely. There are some collections of such utilities, like the Umbrella project , and some folks like Bill Wagner who have written books on the subject (okay, there are other things in there too), so I thought I might as well throw my hat into the ring as well.</description></item><item><title>Do I have the answer yet? Not really</title><link>http://drrandom.org/2009/02/08/do-i-have-the-answer-yet-not-really/</link><pubDate>Sun, 08 Feb 2009 00:31:31 +0000</pubDate><guid>http://drrandom.org/2009/02/08/do-i-have-the-answer-yet-not-really/</guid><description>So previously I posed a question , which in it&amp;rsquo;s simplest form is: Should you write code for the rest of your group (or at their proficency level), or should you write code as advanced as you need. and let it serve as an example for those on your team who are less advanced in their abilities. The practical answer I have come up with is, like most answers of this type, “It depends”.</description></item><item><title>Use of a "Personal Branch" for long-running stories</title><link>http://drrandom.org/2009/02/08/use-of-a-personal-branch-for-long-running-stories/</link><pubDate>Sun, 08 Feb 2009 00:09:21 +0000</pubDate><guid>http://drrandom.org/2009/02/08/use-of-a-personal-branch-for-long-running-stories/</guid><description>At Envisage , we have a 1 week iteration. This means that we typically don&amp;rsquo;t want a single story to go longer than one week. We also change up the pair rotation once per week. The estimation process is not perfect, though, and we have a lot of support from management to choose doing things right, rather than doing things now, which leads to stories going beyond a single iteration. So when this happens, there is usually a small rock/paper/scissors session with the developers involved to determine who will be taking the story.</description></item><item><title>New addiction: StackOverflow.com</title><link>http://drrandom.org/2008/10/16/new-addiction-stackoverflow-com/</link><pubDate>Thu, 16 Oct 2008 03:00:12 +0000</pubDate><guid>http://drrandom.org/2008/10/16/new-addiction-stackoverflow-com/</guid><description>Like so many others, I&amp;rsquo;ve been sucked into the alure of StackOverflow .
This is kinda like a porn addiction, only more destructive to personal relationships.</description></item><item><title>How important is your Code Audience?</title><link>http://drrandom.org/2008/04/08/how-important-is-your-code-audience/</link><pubDate>Tue, 08 Apr 2008 17:30:04 +0000</pubDate><guid>http://drrandom.org/2008/04/08/how-important-is-your-code-audience/</guid><description>We had a friend visiting from out of town last night, and she is apparently fond of “Top Chef”. This was the first time I had encountered this particular “reality” based show, and I found in a lot of ways it was like the majority of the rest of the shows out there; trying hard to create drama where there really isn&amp;rsquo;t any. In this particular episode there was a challenge to cook food for a neighborhood block party.</description></item><item><title>I’m a Nerd</title><link>http://drrandom.org/2007/10/10/im-a-nerd/</link><pubDate>Wed, 10 Oct 2007 23:06:15 +0000</pubDate><guid>http://drrandom.org/2007/10/10/im-a-nerd/</guid><description>I think this falls pretty solidly in the DUH! category.</description></item><item><title>The evolution of design, and the continued search for "The Way"</title><link>http://drrandom.org/2007/10/02/the-evolution-of-design-and-the-continued-search-for-the-way/</link><pubDate>Tue, 02 Oct 2007 20:53:00 +0000</pubDate><guid>http://drrandom.org/2007/10/02/the-evolution-of-design-and-the-continued-search-for-the-way/</guid><description>I&amp;rsquo;m currently finding myself in the midst of an evolutionary change. And I&amp;rsquo;m not talking about my super-human mutant powers, I&amp;rsquo;m talking about the way I&amp;rsquo;m thinking about solving a specific set of problems.
Let&amp;rsquo;s start with a sample&amp;hellip;.Lets take something like processing credit-cards as a benign and IP free place to start. As a subject that I really have no practical experience with, it seems like an appropriate choice. I&amp;rsquo;m going to assume that there are different rules for doing checksum validation on credit card numbers, depending on what the card is (Mastercard/Visa/Discover/etc).</description></item><item><title>I’m getting more fluent…and its kinda strange</title><link>http://drrandom.org/2007/09/15/im-getting-more-fluent-and-its-kinda-strange/</link><pubDate>Sat, 15 Sep 2007 15:29:40 +0000</pubDate><guid>http://drrandom.org/2007/09/15/im-getting-more-fluent-and-its-kinda-strange/</guid><description>About two weeks ago I crafted my first Fluent Interface. Since then I&amp;rsquo;m finding myself seeing more and more places where I think such an approach would be useful. The part that I&amp;rsquo;m finding odd is that it is something that just recently became a possibility for me. The big motivating factor behind that I believe was reading the post that Martin Fowler did on the subject, in which he basically describes it as a super-great idea (okay, I&amp;rsquo;m paraphrasing, but you get the idea).</description></item><item><title>My new favorite phrase</title><link>http://drrandom.org/2007/09/04/my-new-favorite-phrase/</link><pubDate>Tue, 04 Sep 2007 15:45:16 +0000</pubDate><guid>http://drrandom.org/2007/09/04/my-new-favorite-phrase/</guid><description>I found this little jewel in Martin Fowler&amp;rsquo;s recent post OneLanguage
&amp;hellip; a jigger of 80 proof ugliness &amp;hellip;
Check the post for the full context if you need to know what is a jigger of 80 proof ugliness, but this phrase, for whatever reason, gave me large amounts of joy just now.</description></item><item><title>Forcing redirection to HTTPS in ASP.Net</title><link>http://drrandom.org/2007/08/17/forcing-redirection-to-https-in-asp-net/</link><pubDate>Fri, 17 Aug 2007 21:02:01 +0000</pubDate><guid>http://drrandom.org/2007/08/17/forcing-redirection-to-https-in-asp-net/</guid><description>I ran into this issue today when trying to find a quick and dirty script to enforce redirection from HTTP to HTTPS for an intranet site we&amp;rsquo;re enabling for HTTPS (yes, I know SSL on an intranet??? One word – Audit). I thought this would be easy&amp;hellip;I half expected that there would be an IIS setting to handle this for me; I was wrong on both counts. So what I ended up doing is using an old DNN HttpModule which was set up to allow the user to specify specific tabs in DNN for SSL, and greatly simplifying things to work to my advantage.</description></item><item><title>Protect Yourself – Use TDD</title><link>http://drrandom.org/2007/07/18/protect-yourself-use-tdd/</link><pubDate>Wed, 18 Jul 2007 06:33:00 +0000</pubDate><guid>http://drrandom.org/2007/07/18/protect-yourself-use-tdd/</guid><description>So I had this analogy pop into my head a while back and I&amp;rsquo;ve been sitting on it because, quite frankly, I was almost embarrassed to have thought of it. I finally decided that I might as well post it since no one is going to read this anyway, so here goes:
Writing software without TDD is like having unprotected sex. Its extremely irresponsible in this day and age when everyone is supposed to know better, but it still happens a lot.</description></item><item><title>Taking the CodeRush Plunge</title><link>http://drrandom.org/2007/07/13/taking-the-coderush-plunge/</link><pubDate>Fri, 13 Jul 2007 15:00:21 +0000</pubDate><guid>http://drrandom.org/2007/07/13/taking-the-coderush-plunge/</guid><description>I recently decided to take the plunge and get CodeRush and Refactor! Pro (along with DxCore ) loaded instead of Resharper . Now, don&amp;rsquo;t get me wrong, there is a lot I like about Resharper, but overall the performance was becoming an issue. There were often problems with VS freezing for no particular reason, and then coming back as if nothing was wrong&amp;hellip;I swear it was like my IDE had narcolepsy or something.</description></item><item><title>More On Testing and "Friend" Assemblies</title><link>http://drrandom.org/2007/06/18/more-on-testing-and-friend-assemblies/</link><pubDate>Mon, 18 Jun 2007 15:33:00 +0000</pubDate><guid>http://drrandom.org/2007/06/18/more-on-testing-and-friend-assemblies/</guid><description>So if you recall from some of my earlier posts, I&amp;rsquo;ve talked about the concept of the “Friend” class in C++ and how it could apply to TDD within .Net. Well, today, with the help of Roy Osherove, I just stumbled upon the InternalsVisibleToAttribute within .Net 2.0. This allows you to specify within one assembly, another assembly that should have access to the internal members of your assembly. This is genius, and goes a long way towards allowing you to keep your code encapsulated, while still being testable.</description></item><item><title>Struggles with the UpdaterApplicationBlock</title><link>http://drrandom.org/2007/06/11/struggles-with-the-updaterapplicationblock/</link><pubDate>Mon, 11 Jun 2007 18:53:07 +0000</pubDate><guid>http://drrandom.org/2007/06/11/struggles-with-the-updaterapplicationblock/</guid><description>The project I&amp;rsquo;m working on now has a huge need for auto-update. Strangely enough, there aren&amp;rsquo;t a whole lot of documented solutions for an auto-update application for .Net 1.1. In the 2.0 world you have ClickOnce, which handles those sorts of things for you (and in a way that isn&amp;rsquo;t terribly difficult to manage as a developer&amp;hellip;as long as you pay attention to what your doing), but the only real option you get from MS on this is the AutoUpdater Application Block from the Patterns and Practices guys.</description></item><item><title>Linux PVR – Part 2</title><link>http://drrandom.org/2007/06/10/linux-pvr-part-2/</link><pubDate>Sun, 10 Jun 2007 13:17:08 +0000</pubDate><guid>http://drrandom.org/2007/06/10/linux-pvr-part-2/</guid><description>I&amp;rsquo;ve been doing a lot of poking around the MythTV and Knoppmyth sites recently trying to figure out what is going to work best in my current situation. Since I&amp;rsquo;ve got cable, and not satellite, it would seem that it is possible to get all of the non-encrypted content from my provider, as long as I have a capture card with QAM support. These cards seem to be HD cards overall (at least I haven&amp;rsquo;t found one that is supported that is not HD), which makes sense given the QAM signal will be a digital signal.</description></item><item><title>You got your DDD in my SOA!</title><link>http://drrandom.org/2007/06/05/you-got-your-ddd-in-my-soa/</link><pubDate>Tue, 05 Jun 2007 14:09:50 +0000</pubDate><guid>http://drrandom.org/2007/06/05/you-got-your-ddd-in-my-soa/</guid><description>I&amp;rsquo;ve been trying to catch up on past episodes of .Net Rocks while on my hour+ drive to work everyday, and this morning listened to the interview with Jimmy Nilsson (episode # 191 ) on Domain Driven Design. I&amp;rsquo;ll admit now that I have not had time to read his book all the way through, but it is one of the ones that I&amp;rsquo;m most eager to dig into, since not only is he talking about DDD, but he&amp;rsquo;s also talking about the Martin Fowler design patterns from PoEEA .</description></item><item><title>More Thoughts on Language Support of TDD</title><link>http://drrandom.org/2007/06/04/more-thoughts-on-language-support-of-tdd/</link><pubDate>Mon, 04 Jun 2007 14:21:47 +0000</pubDate><guid>http://drrandom.org/2007/06/04/more-thoughts-on-language-support-of-tdd/</guid><description>Thinking about my earlier post discussing the OOP vs TOOP problem, I mentioned at the end that the best solution to this problem in my mind would be integrated language support for test classes. Specifically, a way to let the Compiler/Runtime know that a specific class is a test class, and should therefore be able to access any and every property of a class.
It occurred to me that such blatant intrusion into the privacy of a class is not unknown in the programming world.</description></item><item><title>Using Unit Testing To Document Requirements</title><link>http://drrandom.org/2007/06/01/using-unit-testing-to-document-requirements/</link><pubDate>Fri, 01 Jun 2007 15:17:02 +0000</pubDate><guid>http://drrandom.org/2007/06/01/using-unit-testing-to-document-requirements/</guid><description>Here is something I&amp;rsquo;ve been kicking around in my head for a while, and thought I would put it down in more or less a “permanent” format so maybe I&amp;rsquo;ll do something about it sometime&amp;hellip;
Back when I was first trying to get my head around TDD, one of the things that I found most clarifying was an idea I first saw in Test Driven Development in Microsoft .Net (Microsoft Press).</description></item><item><title>To TOOP or OOP? How to decide?</title><link>http://drrandom.org/2007/05/29/to-toop-or-oop-how-to-decide/</link><pubDate>Tue, 29 May 2007 21:12:42 +0000</pubDate><guid>http://drrandom.org/2007/05/29/to-toop-or-oop-how-to-decide/</guid><description>Its been a while now, but Roy Osherove posted some articles about Testable Object-Oriented Programming. That is, designing your code to be testable by default. The part of this that is most interesting is that he suggests that sometimes you need to sacrifice encapsulation in favor of being able to test your code. This is where one of the biggest flaws with TDD (at least in my opinion) begins to show.</description></item><item><title>I love Mock Objects, but am I a “Mockist”?</title><link>http://drrandom.org/2007/05/29/i-love-mock-objects-but-am-i-a-mockist/</link><pubDate>Tue, 29 May 2007 15:45:00 +0000</pubDate><guid>http://drrandom.org/2007/05/29/i-love-mock-objects-but-am-i-a-mockist/</guid><description>I have officially crossed over&amp;hellip;.I am now using Mock Objects in my tests and loving it. After much humming and hawing, and trying to figure out how to write truly effective tests, I decided to give it a go, and so grabbed a copy of Rhino Mocks and started the grueling task of converting some data access code so that I no longer needed a database to run the tests. It took a little bit to get my mind around the new way of thinking, but I have to say it worked great.</description></item><item><title>Genuine Advantage Notification – WTF?</title><link>http://drrandom.org/2007/04/04/genuine-advantage-notification-wtf/</link><pubDate>Wed, 04 Apr 2007 11:30:00 +0000</pubDate><guid>http://drrandom.org/2007/04/04/genuine-advantage-notification-wtf/</guid><description>This morning I was greeted by a friendly message from Windows Update saying I had updates ready to install. Because I&amp;rsquo;m the curious sort who likes to see how many issues MS has to deal with regularly, I decided to use “Advanced” mode to see what the updates were (By “Advanced” of course it means anyone who is concerned about what is getting installed on their machines&amp;hellip;I&amp;rsquo;ve seen I Robot, I know that one day the great machine can decide the only way to save us from our selves is to format our hard drives).</description></item><item><title>SQL Reporting Services Problems Finally Solved!</title><link>http://drrandom.org/2007/03/09/sql-reporting-services-problems-finally-solved/</link><pubDate>Fri, 09 Mar 2007 16:04:35 +0000</pubDate><guid>http://drrandom.org/2007/03/09/sql-reporting-services-problems-finally-solved/</guid><description>A little background: I&amp;rsquo;ve been working with a SQL 2000 Reporting Server for about 4 months now, trying to do some integration into an intranet app, and some reporting conversion. For the last 3 months or so, the web services API, and the ability to publish from within Visual Studio have been gone. Needless to say this has put a serious damper on my ability to integrate RS into the client&amp;rsquo;s intranet.</description></item><item><title>Linux PVR – Part 1 (Prolouge)</title><link>http://drrandom.org/2007/02/24/linux-pvr-part-1-prolouge/</link><pubDate>Sat, 24 Feb 2007 20:23:11 +0000</pubDate><guid>http://drrandom.org/2007/02/24/linux-pvr-part-1-prolouge/</guid><description>My wife and I have decided to try and put together a PVR box to make life a little easier. With Lana getting old enough to pay attention to grown-up TV, and the fact that there are 4 shows we like to watch that happen at the same time, it seems appropriate (not to mention being able to record Sesame Street for the baby).
So here is what I’ve figured out so far:</description></item><item><title>More on Marker Interfaces</title><link>http://drrandom.org/2007/01/16/more-on-marker-interfaces/</link><pubDate>Tue, 16 Jan 2007 17:15:01 +0000</pubDate><guid>http://drrandom.org/2007/01/16/more-on-marker-interfaces/</guid><description>I&amp;rsquo;ve been reading the “Framework Design Guidelines: Conventions, Idioms, and Patterns for Reusable .NET Libraries” book recently, and I came across a section discussing interface design, which had direct bearing on one of my earlier posts regarding programmer intent. They basically state flat out that you should never use marker interfaces in .Net. Instead, you should favor custom attributes, and then test the type for that attribute. This was interesting to me, since I have been trying to determine what, if any, value marker interfaces would have in .</description></item><item><title>Multiple IEs</title><link>http://drrandom.org/2007/01/08/multiple-ies/</link><pubDate>Mon, 08 Jan 2007 16:23:33 +0000</pubDate><guid>http://drrandom.org/2007/01/08/multiple-ies/</guid><description>I recently ran across an intranet reporting app which required IE6 (or, I should say, would not work with IE7 or FireFox 2). I upgraded to IE7 originally after numerous javascript errors, and a desire to check out CardSpace, and thus far had not had too many problems. This was a potential issue, however.
Fortunately there is a ready made solution: Multiple IE&amp;rsquo;s. This little gem is a single installer, which will allow you to install any version of IE from 3 through 6 in it&amp;rsquo;s own folder so it does not interfere with the default install.</description></item><item><title>Capturing Programmer Intent</title><link>http://drrandom.org/2007/01/02/capturing-programmer-intent/</link><pubDate>Tue, 02 Jan 2007 16:48:24 +0000</pubDate><guid>http://drrandom.org/2007/01/02/capturing-programmer-intent/</guid><description>I was listening to the ArCast recorded with Scott Hanselman earlier today, and he was talking about the idea that Non-Software artifacts should approach zero. If you&amp;rsquo;ve seen some of his posts, or listened to some Hanselminutes podcasts, you have no doubt come across this idea before. I like this particular phrasing mostly because it gets to the heart of what I think one of the most often overlooked aspect of the programming process is; Namely, the intent of the programmer.</description></item><item><title>I figured as much</title><link>http://drrandom.org/2007/01/02/i-figured-as-much/</link><pubDate>Tue, 02 Jan 2007 15:34:33 +0000</pubDate><guid>http://drrandom.org/2007/01/02/i-figured-as-much/</guid><description>Here are my results of the Superhero Personality Test&amp;hellip;Does it surprise anyone, really?
Your results:
You are Spider-Man
Spider-Man &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;80&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 80% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; Green Lantern &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;65&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 65% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; Iron Man &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;55&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 55% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; Catwoman &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;55&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 55% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; The Flash &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;50&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 50% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; Hulk &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;50&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 50% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; Superman &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;45&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 45% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; Supergirl &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;40&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 40% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; Robin &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;35&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 35% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; Batman &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;35&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 35% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; Wonder Woman &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;hr align=&amp;quot;left&amp;quot; noshade=&amp;quot;noshade&amp;quot; size=&amp;quot;4&amp;quot; width=&amp;quot;30&amp;quot; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 30% &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; You are intelligent, witty, &amp;lt;br /&amp;gt;a bit geeky and have great&amp;lt;br /&amp;gt; power and responsibility.</description></item><item><title>Oh to live in a TDD world</title><link>http://drrandom.org/2006/12/27/oh-to-live-in-a-tdd-world/</link><pubDate>Wed, 27 Dec 2006 16:25:37 +0000</pubDate><guid>http://drrandom.org/2006/12/27/oh-to-live-in-a-tdd-world/</guid><description>Okay, I admit it, this is a rant&amp;hellip;.But I promised myself I would post more, so you have to take what you can&amp;hellip;
So here&amp;rsquo;s the deal, I&amp;rsquo;ve been peripherally involved in a project at my current client, to the point that I know generally where things are going, but I haven&amp;rsquo;t done any code review or anything like that. The good news is that the developer working on it is fairly sharp, so I had no major worries&amp;hellip;.</description></item><item><title>WinFX By Any Other Name….</title><link>http://drrandom.org/2006/06/15/winfx-by-any-other-name/</link><pubDate>Thu, 15 Jun 2006 17:11:21 +0000</pubDate><guid>http://drrandom.org/2006/06/15/winfx-by-any-other-name/</guid><description>It looks like, to help avoid confusion, and questions from developers, Microsoft is renaming WinFx to the .Net Framework 3.0. Evedently people were under the impression that WinFX was a seperate entity.
Here&amp;rsquo;s the post:
http://blogs.msdn.com/somasegar/archive/2006/06/09/624300.aspx</description></item><item><title>Thread Exception Change in .Net 2.0</title><link>http://drrandom.org/2006/05/31/thread-exception-change-in-net-2-0/</link><pubDate>Wed, 31 May 2006 15:47:26 +0000</pubDate><guid>http://drrandom.org/2006/05/31/thread-exception-change-in-net-2-0/</guid><description>I just learned that Microsoft changed the way unhandled exceptions in Threads are propogated in .Net 2.0 vs the way they worked in 1.1. With 2.0 any unhandled exceptions in a thread will not only cause that thread to exit, but will also be bubbled up to the thread that started the offending thread. Overall, I think this is a good thing, since not only will it force people to handle exceptions within their thread code, but it will also eliminate the problem of processes mysteriously stopping if there is an unhandled exception on a thread.</description></item><item><title>Learn something new every….</title><link>http://drrandom.org/2006/05/24/learn-something-new-every/</link><pubDate>Wed, 24 May 2006 16:30:23 +0000</pubDate><guid>http://drrandom.org/2006/05/24/learn-something-new-every/</guid><description>It just goes to show that there are always little surprises waiting around the corner. I&amp;rsquo;ve been looking at least casually at .Net 2.0 since Beta 2, and I even read through the “What&amp;rsquo;s New” for C# 2.0 to see if I missed anything. Somehow I managed not to notice Implicit Delegate Assignment (or at least that&amp;rsquo;s what I&amp;rsquo;m calling it).
It is now possible to assign a delegate using just the Class and Method name&amp;hellip;you no longer have to create a new instance of the delegate type.</description></item><item><title>Up and Running!</title><link>http://drrandom.org/posts/2006-05-10-up-and-running/</link><pubDate>Wed, 10 May 2006 17:32:08 +0000</pubDate><guid>http://drrandom.org/posts/2006-05-10-up-and-running/</guid><description>The Dr. is back&amp;hellip;.after a few years away, I&amp;rsquo;ve now decided to make DrRandom.org a blog&amp;hellip;come back for more.</description></item></channel></rss>