<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Making the Climb on Dr Random</title><link>http://drrandom.org/tags/Making-the-Climb/</link><description>Recent content in Making the Climb on Dr Random</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 22 Jan 2012 20:23:58 +0000</lastBuildDate><atom:link href="http://drrandom.org/tags/Making-the-Climb/index.xml" rel="self" type="application/rss+xml"/><item><title>Making the Climb Part 4–Pattern Matching</title><link>http://drrandom.org/2012/01/22/making-the-climb-part-4-pattern-matching/</link><pubDate>Sun, 22 Jan 2012 20:23:58 +0000</pubDate><guid>http://drrandom.org/2012/01/22/making-the-climb-part-4-pattern-matching/</guid><description>Continuing our journey down the path from the familiar to the down-right bizarre, we find ourselves at Pattern Matching. This is a feature of the Scala language that shows it’s functional side in a strong way. Pattern Matching is a fundamental part of functional languages in general, and provides a way to write very concise and expressive code. On the surface, pattern matching in Scala looks an awful lot like switch statements in C# (and Java for that matter), but you shouldn’t cling too hard to that association.</description></item><item><title>Making the Climb Part 3 – Generics of a Higher Kind</title><link>http://drrandom.org/2011/10/05/making-the-climb-part-3-generics-of-a-higher-kind/</link><pubDate>Wed, 05 Oct 2011 16:24:00 +0000</pubDate><guid>http://drrandom.org/2011/10/05/making-the-climb-part-3-generics-of-a-higher-kind/</guid><description>This is part 3 in a series. If you&amp;rsquo;ve not followed-along so far, you may want to check out Part 1 and Part 2 first.
It&amp;rsquo;s time to start digging in to some of the crazy-goodness that makes Scala such a glorious and wonderful thing. First things first, though, we have to talk a little bit about this history of Generics in Java and the JVM.
Type Erasure and you&amp;hellip; Back around the time that .</description></item><item><title>Making the Climb Part 2–Object-Oriented Programming in Scala</title><link>http://drrandom.org/2011/08/14/making-the-climb-part-2-object-oriented-programming-in-scala/</link><pubDate>Sun, 14 Aug 2011 23:39:00 +0000</pubDate><guid>http://drrandom.org/2011/08/14/making-the-climb-part-2-object-oriented-programming-in-scala/</guid><description>In Part 2 of this series we&amp;rsquo;re going to move into some of the object-oriented aspects of Scala. For a primer on what Scala is, and a quick primer on syntax, check out part 1 .
Let&amp;rsquo;s start with the built-in object structure Like C# and Java, Scala has a built-in object hierarchy, and a standard library full of goodies. Unlike Java and C#, Scala tackled the issue of reference types and value types head-on, so while the root type in the Scala type system is the Any type, there are two descendants of Any that come into play before any other type.</description></item><item><title>Making The Climb: Head-To-Head with Project Euler (questions #1 &amp; #2)</title><link>http://drrandom.org/2011/08/04/making-the-climb-head-to-head-with-project-euler-questions-1-2/</link><pubDate>Thu, 04 Aug 2011 01:50:00 +0000</pubDate><guid>http://drrandom.org/2011/08/04/making-the-climb-head-to-head-with-project-euler-questions-1-2/</guid><description>I’m going to take a brief intermission in my Scala series , and show a head-to-head comparison of some code in Scala and C#. To do this, I’m going to go with the first and second problems from Project Euler . If your not familiar with the site, it’s a playground full of problems that are absolutely perfect for functional languages (cause they tend to be mathematical functions). So let’s get started with Question #1:</description></item><item><title>Making the Climb: Chronicling the journey from C# to Scala</title><link>http://drrandom.org/2011/07/31/making-the-climb-chronicling-the-journey-from-c-to-scala/</link><pubDate>Sun, 31 Jul 2011 19:41:00 +0000</pubDate><guid>http://drrandom.org/2011/07/31/making-the-climb-chronicling-the-journey-from-c-to-scala/</guid><description>Hows that for a title, eh? Yeah, I know, kinda crappy, but there is only so much creativity I can manage in a day, and as you will soon find out my mind is busy with all kinds of new and interesting thing, so any spare neural pathways which may have one been useful for something like clever titles are now just too damn busy to be bothered.
So what is this all about?</description></item></channel></rss>