<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scala on Dr Random</title><link>http://drrandom.org/tags/Scala/</link><description>Recent content in Scala on Dr Random</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 24 Jan 2012 06:52:00 +0000</lastBuildDate><atom:link href="http://drrandom.org/tags/Scala/index.xml" rel="self" type="application/rss+xml"/><item><title>I think Scala may be a gateway drug</title><link>http://drrandom.org/2012/01/24/i-think-scala-may-be-a-gateway-drug/</link><pubDate>Tue, 24 Jan 2012 06:52:00 +0000</pubDate><guid>http://drrandom.org/2012/01/24/i-think-scala-may-be-a-gateway-drug/</guid><description>As I have been trying to learn more about Scala, there have been several paths that I’ve had to follow. One is getting acquainted with the state of Java development, since ultimately Scala exists within the Java ecosystem. Another is finding my way around the Scala libraries, tools, and idioms. But there is a third that seems to be somewhat deeper, and that is coming to grips with the functional nature of the language.</description></item><item><title>Making the Climb Part 4–Pattern Matching</title><link>http://drrandom.org/2012/01/22/making-the-climb-part-4-pattern-matching/</link><pubDate>Sun, 22 Jan 2012 20:23:58 +0000</pubDate><guid>http://drrandom.org/2012/01/22/making-the-climb-part-4-pattern-matching/</guid><description>Continuing our journey down the path from the familiar to the down-right bizarre, we find ourselves at Pattern Matching. This is a feature of the Scala language that shows it’s functional side in a strong way. Pattern Matching is a fundamental part of functional languages in general, and provides a way to write very concise and expressive code. On the surface, pattern matching in Scala looks an awful lot like switch statements in C# (and Java for that matter), but you shouldn’t cling too hard to that association.</description></item><item><title>Making the Climb Part 3 – Generics of a Higher Kind</title><link>http://drrandom.org/2011/10/05/making-the-climb-part-3-generics-of-a-higher-kind/</link><pubDate>Wed, 05 Oct 2011 16:24:00 +0000</pubDate><guid>http://drrandom.org/2011/10/05/making-the-climb-part-3-generics-of-a-higher-kind/</guid><description>This is part 3 in a series. If you&amp;rsquo;ve not followed-along so far, you may want to check out Part 1 and Part 2 first.
It&amp;rsquo;s time to start digging in to some of the crazy-goodness that makes Scala such a glorious and wonderful thing. First things first, though, we have to talk a little bit about this history of Generics in Java and the JVM.
Type Erasure and you&amp;hellip; Back around the time that .</description></item></channel></rss>